package urlinfoapi

import (
	"net/http"
	"time"

	"github.com/gorilla/mux"
)

func RunUrlInfoApi(endpoint string) error {
	r := mux.NewRouter()
	// Register the handlers
	registerHandlers(r)

	srv := &http.Server{
		Handler: r,
		Addr:    endpoint,
		// Good practice: enforce timeouts for servers you create!
		WriteTimeout: 15 * time.Second,
		ReadTimeout:  15 * time.Second,
	}
	return srv.ListenAndServe()
}

// Use gorilla/mux for rich routing.
// See http://www.gorillatoolkit.org/pkg/mux
func registerHandlers(r *mux.Router) {
	r.Methods("GET").Path("/urlinfo/1/{hostname_and_port}/{original_path_and_query_string}").
		HandlerFunc(getURLInfo)

	r.Methods("POST").Path("/urlupdate/1").
		HandlerFunc(updateURLInfo)

	// Respond to health checks.
	// Indicate the server is healthy.
	r.Methods("GET").Path("/health").HandlerFunc(
		func(w http.ResponseWriter, r *http.Request) {
			w.Write([]byte("ok"))
		})

}
