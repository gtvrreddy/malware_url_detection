package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"malware_url_detection/models"
	"net/http"
)

func main() {
	doPut()
	doGet()
}

func doGet() {
	fmt.Println("Checking whether the url is present or not in the DB")
	client := &http.Client{}
	req, err := http.NewRequest("GET", "http://localhost:8080/urlinfo/1/google.com/index.html", nil)
	if err != nil {
		log.Fatal(err)
	}
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(resp.Status, err)
	}
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(resp.Status, err)
	}
	fmt.Println(string(body))

}

func doPut() {
	fmt.Println("Updating the url into the DB")
	urlInfo := &swagger.SetUrl{}
	urlInfo.URL = "google.com/index.html"

	client := &http.Client{}
	b := new(bytes.Buffer)
	json.NewEncoder(b).Encode(urlInfo)
	req, err := http.NewRequest("POST", "http://localhost:8080/urlupdate/1", b)
	if err != nil {
		log.Fatal(err)
	}
	resp, err := client.Do(req)
	if err != nil {
		log.Fatal(resp.Status, err)
	}
	if err != nil {
		log.Fatal(resp.Status, err)
	}
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(resp.Status, err)
	}
	fmt.Println(string(body))
}
